<?xml version="1.0" encoding="utf-8" ?>
<!-- 2024-01-26 CumulusX! Modification for Speed-to-fly tone starting line 868 -->
<!-- 	Normal mode (0), beeper indicates lift, line  868 -->
<!-- 	STF-Mode (1), beeper indicates speed error |stf_tone| > 0.1 m/s, line 872 -->
<!-- 2024-01-28 CumulusX! New TE formula, uses "E:Simulation Time" instead of "E:Absolute Time" for better precision (lines 853-864), removed conflicting code in Legacy section-->
<!-- 2024-01-30 CumulusX! intercept potential division by zero with if-clause (lines 854/865)-->
<ModelInfo>
	<LODS>
		<LOD minSize="0" ModelFile="D2C_INT.gltf"/>
	</LODS>
	<Behaviors>
		<Include ModelBehaviorFile="Asobo\Exterior.xml"/>
		<Include ModelBehaviorFile="Asobo\Generic\FX.xml"/>
		<Include ModelBehaviorFile="Asobo\Common.xml"/>
		<Include ModelBehaviorFile="Asobo\Airliner\AirlinerCommon.xml"/>
		<Include ModelBehaviorFile="Asobo\Airliner\Boeing.xml"/>
		<Include ModelBehaviorFile="Asobo\Airliner\FMC.xml"/>
		<Include ModelBehaviorFile="Asobo\NAVCOM\AS92.xml"/>
		<Include ModelBehaviorFile="Asobo\Transponder\AS21.xml"/>	
		<Include ModelBehaviorFile=".\TrimWizard.XML"/>	
<!-- ###################################### -->
<!-- ########## PRIMARY CONTROLS ########## -->
<!-- ###################################### -->	
        <Component ID="FLIGHT_STICK">
            <UseTemplate Name="ASOBO_GT_Update">
                <FREQUENCY>30</FREQUENCY>
                <UPDATE_CODE>
                    (A:SIM ON GROUND, Bool) (A:GROUND VELOCITY, Knots) * 25 min s0
                    l0 rand 0.5 - * 25 / (&gt;L:Vibration1)
                    l0 rand 0.5 - * 25 / (&gt;L:Vibration2)

                    (A:SIM ON GROUND, Bool)
                    if{
                        (A:WING FLEX PCT:1, Percent over 100) (L:Vibration1) 0.15 * + (&gt;A:WING FLEX PCT:1, Percent over 100)
                        (A:WING FLEX PCT:2, Percent over 100) (L:Vibration1) 0.15 * + (&gt;A:WING FLEX PCT:2, Percent over 100)
                    }
                </UPDATE_CODE>
            </UseTemplate>
			<UseTemplate name="ASOBO_GT_Anim_Code">
				<PART_ID>HANDLING_Yoke</PART_ID>
				<ANIM_NAME>HANDLING_YOKE_Lever_StickForeAft</ANIM_NAME>
				<ANIM_CODE>
					(A:YOKE Y POSITION, Percent over 100) 1 + (L:Vibration1) 0.02 * +
				</ANIM_CODE>
				<ANIM_LENGTH>2</ANIM_LENGTH>
				<ANIM_LAG>0</ANIM_LAG>
			</UseTemplate>
			<UseTemplate name="ASOBO_GT_Anim_Code">
				<PART_ID>HANDLING_Yoke</PART_ID>
				<ANIM_NAME>HANDLING_YOKE_Lever_StickLR</ANIM_NAME>
				<ANIM_CODE>
					(A:YOKE X POSITION LINEAR, Percent over 100) 1 + (L:Vibration2) 0.02 * +
				</ANIM_CODE>
				<ANIM_LENGTH>2</ANIM_LENGTH>
				<ANIM_LAG>0</ANIM_LAG>
			</UseTemplate>
		</Component>
		<Component ID="RUDDER_PEDALS">
			<UseTemplate Name="ASOBO_HANDLING_RudderPedals_Template">
			<ANIM_NAME>Rudder_Pedal_Percent</ANIM_NAME>
			<RUDDERPEDALS_TYPE>MERGED</RUDDERPEDALS_TYPE>
			<DIFFERENTIATE_BRAKE_ANIM_L_R>True</DIFFERENTIATE_BRAKE_ANIM_L_R>
			<NODE_ID_L_RUDDER>INT_RUDDER_LEFT</NODE_ID_L_RUDDER>
			<NODE_ID_R_RUDDER>INT_RUDDER_RIGHT</NODE_ID_R_RUDDER>
			<NODE_ID_L_BRAKE>INT_CONTROL_STICK_BRAKE_HANDLE</NODE_ID_L_BRAKE>
			<NODE_ID_R_BRAKE>INT_CONTROL_STICK_BRAKE_HANDLE</NODE_ID_R_BRAKE>
			<USE_BRAKE>True</USE_BRAKE>
			</UseTemplate>
		</Component>
		<Component ID="SPOILERS_HANDLE" Node="INT_SPOILER_HANDLE">
			<UseTemplate Name="ASOBO_HANDLING_Lever_Spoilers_Template">
				<DRAG_ANIM_NAME>Spoiler_Handle</DRAG_ANIM_NAME>		
				<ANIM_NAME>Spoiler_Handle</ANIM_NAME>
				<ANIM_LENGTH>100</ANIM_LENGTH>
				<NODE_ID>INT_SPOILER_HANDLE</NODE_ID>
				<PART_ID>INT_SPOILER_HANDLE</PART_ID>
			</UseTemplate>
			<UseTemplate Name="ASOBO_GT_Update">
				<FREQUENCY>30</FREQUENCY>
				<UPDATE_CODE>
					(A:SPOILERS HANDLE POSITION, percent) d 1 &gt; if{
						(L:LVAR_SPOILERS_PERCENT) 1 &lt;= if{
							(L:SPOILERS_OPEN_LVAR) ! (&gt;L:SPOILERS_OPEN_LVAR)
						}
					} els{
						(L:LVAR_SPOILERS_PERCENT) 100 &gt; if{
							(L:SPOILERS_CLOSE_LVAR) ! (&gt;L:SPOILERS_CLOSE_LVAR)
						}
					}
					(A:SPOILERS HANDLE POSITION, percent) d 25 &gt; if{
						(L:LVAR_SPOILERS_PERCENT) 0 &lt;= if{
							(L:SPOILERS_OPEN_LVAR) ! (&gt;L:SPOILERS_OPEN_LVAR)
						}
					} els{
						(L:LVAR_SPOILERS_PERCENT) 25 &gt; if{
							(L:SPOILERS_CLOSE_LVAR) ! (&gt;L:SPOILERS_CLOSE_LVAR)
						}
					}
				    (&gt;L:LVAR_SPOILERS_PERCENT)
					(A:SPOILERS HANDLE POSITION, percent over 100) (A:AIRSPEED TRUE, knots) 100 / 1 min * (&gt;L:SOUND_SPOILERS)
                </UPDATE_CODE>
            </UseTemplate>
        </Component>
		<Component ID="ELEVATOR_TRIM_HANDLE" Node="INT_TRIM_HANDLE">
			<UseTemplate Name="ASOBO_HANDLING_Wheel_ElevatorTrim_Template">
				<DRAG_ANIM_NAME>Trim_Handle</DRAG_ANIM_NAME>		
				<ANIM_NAME>Trim_Handle</ANIM_NAME>
				<ANIM_TRIGGER_COUNT>50</ANIM_TRIGGER_COUNT>
				<INVERT_ANIM>True</INVERT_ANIM>
				<NODE_ID>INT_TRIM_HANDLE</NODE_ID>
				<PART_ID>INT_TRIM_HANDLE</PART_ID>
			</UseTemplate>
		</Component>
        <Component ID="LANDING_GEAR_HANDLE" Node="INT_LANDING_GEAR_HANDLE">
            <UseTemplate Name="ASOBO_GT_Part_ID">
                <PART_ID>INT_LANDING_GEAR_HANDLE</PART_ID>
            </UseTemplate>
            <UseTemplate Name="ASOBO_GT_Lever_DraggingYAxis_EventsIncDec">
                <ANIM_NAME>Gear_Handle</ANIM_NAME>
				<INVERT_ANIM>True</INVERT_ANIM>
				<ANIM_LAG>80</ANIM_LAG>
                <ANIM_SIMVAR>GEAR HANDLE POSITION</ANIM_SIMVAR>
                <ANIM_SIMVAR_UNITS>percent</ANIM_SIMVAR_UNITS>
                <CLOCKWISE_EVENTID>GEAR_UP</CLOCKWISE_EVENTID>
                <ANTICLOCKWISE_EVENTID>GEAR_DOWN</ANTICLOCKWISE_EVENTID>
                <TOOLTIPID>Landing Gear: %((A:GEAR HANDLE POSITION, percent) near 100 ==)%{if}DOWN%{else}UP%{end}</TOOLTIPID>
            </UseTemplate>
			<UseTemplate Name="ASOBO_GT_Update">
				<FREQUENCY>30</FREQUENCY>
				<UPDATE_CODE>
					(A:GEAR HANDLE POSITION, percent over 100) (A:AIRSPEED TRUE, knots) 100 / 1 min * (&gt;L:SOUND_GEAR)
                </UPDATE_CODE>
            </UseTemplate>
        </Component>
		<Component ID="BALLAST_DUMP_HANDLE" Node="INT_BALIS_RELEASE_HANDLE">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<PART_ID>INT_BALIS_RELEASE_HANDLE</PART_ID>
				<ANIM_NAME>Ballast_Handle</ANIM_NAME>
				<ANIM_CODE>(A:LIGHT STROBE, bool) 100 *</ANIM_CODE>
				<ANIMTIP_0>Ballast Valves (CLOSED) %((A:PAYLOAD STATION WEIGHT:2, pounds) (A:PAYLOAD STATION WEIGHT:3, pounds) + int (A:PAYLOAD STATION WEIGHT:4, pounds) + int)%!s!lbs</ANIMTIP_0>
				<ANIMTIP_1>Ballast Valves (OPEN) %((A:PAYLOAD STATION WEIGHT:2, pounds) (A:PAYLOAD STATION WEIGHT:3, pounds) + int (A:PAYLOAD STATION WEIGHT:4, pounds) + int)%!s!lbs</ANIMTIP_1>
				<WWISE_EVENT_1>lever_choke_switch_on</WWISE_EVENT_1>
				<WWISE_EVENT_2>lever_choke_switch_off</WWISE_EVENT_2>
				<LEFT_SINGLE_CODE>(A:LIGHT STROBE, bool) ! (&gt;A:LIGHT STROBE, bool)</LEFT_SINGLE_CODE>
				<ANIM_LAG>100</ANIM_LAG>
			</UseTemplate>
		</Component>
<!-- ###################################### -->
<!-- ######### MISC INTERACTIONS ########## -->
<!-- ###################################### -->		
        <Component ID="APRON_WARNING" Node="NOTICE">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<ANIM_NAME>notice_vis</ANIM_NAME>
				<ANIM_CODE>(L:APRON_WARNING) 100 *</ANIM_CODE>
				<ANIMTIP_0>ACKNOWLEDGE</ANIMTIP_0>
				<LEFT_SINGLE_CODE>(L:APRON_WARNING) ! (&gt;L:APRON_WARNING)</LEFT_SINGLE_CODE>
			</UseTemplate>
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:APRON_WARNING)</VISIBILITY_CODE>
			</UseTemplate>
		</Component>
		<Component ID="UNIT_OF_MEASUREMENT">
			<Component ID="TEMPERATURE_TOGGLE" Node="GAUGE_THERMAL_BASE">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<PART_ID>GAUGE_THERMAL_BASE</PART_ID>
					<ANIM_NAME>Temp_Clickable</ANIM_NAME>
					<ANIM_CODE>(L:TEMP_IMPERIAL) 100 *</ANIM_CODE>
					<ANIMTIP_0>TEMPERATURE (CELSIUS)</ANIMTIP_0>
					<ANIMTIP_1>TEMPERATURE (FAHRENHEIT)</ANIMTIP_1>
					<WWISE_EVENT_1>navcom_volume_knob_push_button_on</WWISE_EVENT_1>
					<WWISE_EVENT_2>navcom_volume_knob_push_button_off</WWISE_EVENT_2>
					<LEFT_SINGLE_CODE>(L:TEMP_IMPERIAL) ! (&gt;L:TEMP_IMPERIAL)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<Component ID="UOM_VISIBILITY_1" Node="GAUGES_METRIC">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:UNITS_IMPERIAL) !</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="UOM_VISIBILITY_2" Node="GAUGE_THERMAL_METRIC">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:TEMP_IMPERIAL) !</VISIBILITY_CODE>
				</UseTemplate>
			</Component>			
			<Component ID="UOM_VISIBILITY_3" Node="GAUGE_THERM_DECAL_METRIC">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:TEMP_IMPERIAL) !</VISIBILITY_CODE>
				</UseTemplate>
			</Component>			
			<Component ID="UOM_VISIBILITY_4" Node="GAUGE_ALT_KOHLS_METRIC">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:UNITS_IMPERIAL) !</VISIBILITY_CODE>
				</UseTemplate>
			</Component>			
			<Component ID="UOM_VISIBILITY_5" Node="GAUGE_VSI_TOP_METRIC">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:UNITS_IMPERIAL) !</VISIBILITY_CODE>
				</UseTemplate>
			</Component>			
			<Component ID="UOM_VISIBILITY_6" Node="GAUGE_ALT_100_METRIC">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:UNITS_IMPERIAL) !</VISIBILITY_CODE>
				</UseTemplate>
			</Component>			
			<Component ID="UOM_VISIBILITY_7" Node="GAUGE_ALT_1000_METRIC">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:UNITS_IMPERIAL) !</VISIBILITY_CODE>
				</UseTemplate>
			</Component>			
			<Component ID="UOM_VISIBILITY_8" Node="GAUGE_VSI_BD_METRIC">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:UNITS_IMPERIAL) !</VISIBILITY_CODE>
				</UseTemplate>
			</Component>			
			<Component ID="UOM_VISIBILITY_9" Node="GAUGES_IMPERIAL">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:UNITS_IMPERIAL)</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="UOM_VISIBILITY_10" Node="GAUGE_THERMAL_IMPERIAL">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:TEMP_IMPERIAL)</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="UOM_VISIBILITY_11" Node="GAUGE_THERM_DECAL_IMPERIAL">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:TEMP_IMPERIAL)</VISIBILITY_CODE>
				</UseTemplate>
			</Component>			
			<Component ID="UOM_VISIBILITY_12" Node="GAUGE_ALT_KOHLS_IMPERIAL">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:UNITS_IMPERIAL)</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="UOM_VISIBILITY_13" Node="GAUGE_VSI_TOP_IMPERIAL">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:UNITS_IMPERIAL)</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="UOM_VISIBILITY_14" Node="GAUGE_ALT_100_IMPERIAL">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:UNITS_IMPERIAL)</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="UOM_VISIBILITY_15" Node="GAUGE_ALT_1000_IMPERIAL">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:UNITS_IMPERIAL)</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="UOM_VISIBILITY_16" Node="GAUGE_VSI_BD_IMPERIAL">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:UNITS_IMPERIAL)</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
		</Component>
		<Component ID="CANOPY_AND_WINDOWS">		
			<Component ID="TINT_VISIBILITY_1" Node="CANOPY_GLASS_BLUE">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:CANOPY_TOGGLE) !</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="TINT_VISIBILITY_2" Node="CANOPY_WINDOW_FRAME">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:CANOPY_TOGGLE) !</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="TINT_VISIBILITY_3" Node="CANOPY_GLASS_CLEAR">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:CANOPY_TOGGLE)</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="TINT_VISIBILITY_4" Node="CANOPY_WINDOW_FRAME_CLEAR">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:CANOPY_TOGGLE)</VISIBILITY_CODE>
				</UseTemplate>
			</Component>			
			<Component ID="WINDOW_ANIMATION_1" Node="CANOPY_WINDOW_KNOB">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<ANIM_NAME>Sliding_Window</ANIM_NAME>
					<ANIM_CODE>(L:WINDOW_LARGE) 100 *</ANIM_CODE>
					<ANIMTIP_0>SLIDING SIDE WINDOW (CLOSED)</ANIMTIP_0>
					<ANIMTIP_1>SLIDING SIDE WINDOW (OPEN)</ANIMTIP_1>
					<ANIM_LAG>60</ANIM_LAG>
					<LEFT_SINGLE_CODE>(L:WINDOW_LARGE) ! (&gt;L:WINDOW_LARGE)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<Component ID="WINDOW_ANIMATION_2" Node="CANOPY_DOOR_HANDLE">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<ANIM_NAME>Sliding_Lock</ANIM_NAME>
					<ANIM_CODE>(L:WINDOW_SMALL) 100 *</ANIM_CODE>
					<ANIMTIP_0>VENTILATION SCOOP (CLOSED)</ANIMTIP_0>
					<ANIMTIP_1>VENTILATION SCOOP (OPEN)</ANIMTIP_1>
					<ANIM_LAG>200</ANIM_LAG>
					<LEFT_SINGLE_CODE>(L:WINDOW_SMALL) ! (&gt;L:WINDOW_SMALL)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<Component ID="WINDOW_ANIMATION_3" Node="CANOPY_WINDOW_KNOB_CLEAR">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<ANIM_NAME>Sliding_Window</ANIM_NAME>
					<ANIM_CODE>(L:WINDOW_LARGE) 100 *</ANIM_CODE>
					<ANIMTIP_0>SLIDING SIDE WINDOW (CLOSED)</ANIMTIP_0>
					<ANIMTIP_1>SLIDING SIDE WINDOW (OPEN)</ANIMTIP_1>
					<ANIM_LAG>60</ANIM_LAG>
					<LEFT_SINGLE_CODE>(L:WINDOW_LARGE) ! (&gt;L:WINDOW_LARGE)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<Component ID="WINDOW_ANIMATION_4" Node="CANOPY_DOOR_HANDLE_CLEAR">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<ANIM_NAME>Sliding_Lock</ANIM_NAME>
					<ANIM_CODE>(L:WINDOW_SMALL) 100 *</ANIM_CODE>
					<ANIMTIP_0>VENTILATION SCOOP (CLOSED)</ANIMTIP_0>
					<ANIMTIP_1>VENTILATION SCOOP (OPEN)</ANIMTIP_1>
					<ANIM_LAG>200</ANIM_LAG>
					<LEFT_SINGLE_CODE>(L:WINDOW_SMALL) ! (&gt;L:WINDOW_SMALL)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>					
			<Component ID="CANOPY_SOUND_ENGINE">
				<UseTemplate Name="ASOBO_GT_Update">
					<FREQUENCY>30</FREQUENCY>
					<UPDATE_CODE>
					(L:WINDOW_LARGE) if{ 0 (&gt;L:WINDOW_SMALL) }
					(L:WINDOW_SMALL) (A:AIRSPEED TRUE, meters per second) * 100 min (&gt;L:WINDOW_SMALL_VOLUME, percent)
					(L:WINDOW_LARGE) (A:AIRSPEED TRUE, meters per second) * 100 min (&gt;L:WINDOW_LARGE_VOLUME, percent)
					(A:LIGHT PEDESTRAL, percent) (A:TOTAL WORLD VELOCITY, meters per second) 10.28 &lt; and if{ 0 (&gt;L:CANOPY_CLOSE) 1 (&gt;L:CANOPY_OPEN) } els{ 1 (&gt;L:CANOPY_CLOSE) 0 (&gt;L:CANOPY_OPEN) }					
					</UPDATE_CODE>
				</UseTemplate>
			</Component>
			<Component ID="CANOPY_COVER" Node="CANOPY_COVER">
				<UseTemplate Name="ASOBO_GT_Update">
					<FREQUENCY>5</FREQUENCY>
					<UPDATE_CODE>
					(A:TOTAL WORLD VELOCITY, meters per second) 1 &gt; if{ 0 (&gt;L:COVER_TOGGLE) }
					(A:TOTAL WORLD VELOCITY, meters per second) 10.28 &gt; (A:SIM ON GROUND, Bool) ! or if{ 0 (&gt;K:PEDESTRAL_LIGHTS_SET) }
					</UPDATE_CODE>
				</UseTemplate>
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:COVER_TOGGLE) (A:LIGHT PEDESTRAL, bool) ! and</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="CANOPY_ANIMATION" Node="CANOPY_HANDLE">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<PART_ID>CANOPY_HANDLE</PART_ID>
					<ANIM_NAME>Canopy_Anim</ANIM_NAME>
					<ANIM_CODE>(A:LIGHT PEDESTRAL, bool) 100 *</ANIM_CODE>
					<ANIMTIP_0>CANOPY (CLOSED)</ANIMTIP_0>
					<ANIMTIP_1>CANOPY (OPEN)</ANIMTIP_1>
					<ANIM_LAG>20</ANIM_LAG>
					<LEFT_SINGLE_CODE>(A:LIGHT PEDESTRAL, bool) ! (&gt;A:LIGHT PEDESTRAL, bool)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>						
		</Component>
		<Component ID="OXYGEN_SYSTEM">
			<Component ID="OXYGEN_FLOW" Node="INT_GFOxygen_Knob">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<PART_ID>INT_GFOxygen_Knob</PART_ID>
					<ANIM_NAME>INT_GFOxygen_Knob</ANIM_NAME>
					<ANIM_CODE>(L:OXYGEN_KNOB) 100 *</ANIM_CODE>
					<ANIMTIP_0>OXYGEN VALVE (CLOSED)</ANIMTIP_0>
					<ANIMTIP_1>OXYGEN VALVE (OPEN)</ANIMTIP_1>
					<WWISE_EVENT_1>battery_switch_on</WWISE_EVENT_1>
					<WWISE_EVENT_2>battery_switch_off</WWISE_EVENT_2>
					<LEFT_SINGLE_CODE>(L:OXYGEN_KNOB) ! (&gt;L:OXYGEN_KNOB)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<Component ID="OXYGEN_VISIBILITY_1" Node="INT_GFOxygen_BOTTLE">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:OXYGEN_TOGGLE)</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="OXYGEN_VISIBILITY_2" Node="INT_GFOxygen_MASK">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:OXYGEN_TOGGLE) (L:OXYGEN_SOUND) ! and</VISIBILITY_CODE>
				</UseTemplate>
			</Component>	
			<Component ID="NEEDLE_OXY" Node="Oxygen_Anim">
				<UseTemplate name="ASOBO_GT_Anim_Code">
					<PART_ID>NEEDLE_OXY</PART_ID>
					<ANIM_NAME>Oxygen_Anim</ANIM_NAME>
					<ANIM_CODE>(L:OXYGEN_QTY) 100 *</ANIM_CODE>
					<ANIM_LENGTH>100</ANIM_LENGTH>
					<ANIM_LAG>10</ANIM_LAG>
				</UseTemplate>
				<UseTemplate Name="ASOBO_GT_Update">
					<FREQUENCY>30</FREQUENCY>
					<UPDATE_CODE>
						(A:SIM ON GROUND, Bool)
						(A:GROUND VELOCITY, Knots) 1 &lt; and
						if{
							(L:OXYGEN_QTY) 0.025 + 1 min (&gt;L:OXYGEN_QTY)
						} els{
							(L:OXYGEN_KNOB)
							if{
								(L:OXYGEN_QTY) 0.00010 (A:INDICATED ALTITUDE, Feet) 10000 / * - 0 max (&gt;L:OXYGEN_QTY)
							}
						}
						(L:OXYGEN_KNOB) (L:OXYGEN_QTY) 0 &gt; and (&gt;L:OXYGEN_SOUND)
					</UPDATE_CODE>
				</UseTemplate>
			</Component>	
		</Component>	
		<Component ID="VENTILATION_SYSTEM" Node="SWITCH_AC_KNOB">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<PART_ID>SWITCH_AC_KNOB</PART_ID>
				<ANIM_NAME>AC_Knob</ANIM_NAME>
				<ANIM_CODE>(A:LIGHT CABIN, Bool) 100 *</ANIM_CODE>
				<ANIMTIP_0>VENTILATION (OPEN)</ANIMTIP_0>
				<ANIMTIP_1>VENTILATION (CLOSED)</ANIMTIP_1>
				<WWISE_EVENT_1>parking_brake_switch_on</WWISE_EVENT_1>
				<WWISE_EVENT_2>parking_brake_switch_off</WWISE_EVENT_2>
				<ANIM_LAG>300</ANIM_LAG>
				<ANIM_LENGTH>100</ANIM_LENGTH>                
				<INVERT_ANIM>True</INVERT_ANIM>
				<LEFT_SINGLE_CODE>(A:LIGHT CABIN, Bool) ! (&gt;A:LIGHT CABIN, Bool)</LEFT_SINGLE_CODE>
			</UseTemplate>
			<UseTemplate Name="ASOBO_GT_Update">
				<FREQUENCY>5</FREQUENCY>
				<UPDATE_CODE>(A:LIGHT CABIN, Bool) (A:AIRSPEED TRUE, meters per second) * 100 min (&gt;L:AC_OPEN_VOLUME, percent)</UPDATE_CODE>
			</UseTemplate>
		</Component>
		<Component ID="CUSTOMIZATION_OPTIONS">	
			<Component ID="YOKE_HIDER" Node="INT_SHELL_YOKE">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<PART_ID>INT_SHELL_YOKE</PART_ID>
					<ANIM_NAME>Hide_Yoke</ANIM_NAME>
					<ANIM_CODE>(L:YOKE_TOGGLE) 100 *</ANIM_CODE>
					<ANIMTIP_0>REMOTE STICK (DISPLAYED)</ANIMTIP_0>
					<ANIMTIP_1>REMOTE STICK (HIDDEN)</ANIMTIP_1>
					<WWISE_EVENT_1>navcom_volume_knob_push_button_on</WWISE_EVENT_1>
					<WWISE_EVENT_2>navcom_volume_knob_push_button_off</WWISE_EVENT_2>
					<LEFT_SINGLE_CODE>(L:YOKE_TOGGLE) ! (&gt;L:YOKE_TOGGLE)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<Component ID="YOKE_VISIBILITY" Node="YOKE_FWD_BACK">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:YOKE_TOGGLE) !</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="YAWSTRING_HIDER" Node="CANOPY_YAWSTRING_CUP">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<ANIM_NAME>Hide_Yawstring</ANIM_NAME>
					<ANIM_CODE>(L:YAW_TOGGLE) 100 *</ANIM_CODE>
					<ANIMTIP_0>YAWSTRING (DISPLAYED)</ANIMTIP_0>
					<ANIMTIP_1>YAWSTRING (HIDDEN)</ANIMTIP_1>
					<WWISE_EVENT_1>navcom_knob_push_button_on</WWISE_EVENT_1>
					<WWISE_EVENT_2>navcom_knob_push_button_off</WWISE_EVENT_2>	
					<LEFT_SINGLE_CODE>(L:YAW_TOGGLE) ! (&gt;L:YAW_TOGGLE)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<Component ID="YAWSTRING_VISIBILITY" Node="Yawstring">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:YAW_TOGGLE) !</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="GOPRO_HIDER" Node="BUTTON_CB4">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<NODE_ID>BUTTON_CB4</NODE_ID>
					<PART_ID>BUTTON_CB4</PART_ID>
					<ANIM_NAME>CB_Nav</ANIM_NAME>
					<ANIM_CODE>(L:GOPRO_ACTIVE) 100 *</ANIM_CODE>
					<ANIMTIP_0>GOPRO (DISPLAYED)</ANIMTIP_0>
					<ANIMTIP_1>GOPRO (HIDDEN)</ANIMTIP_1>
					<WWISE_EVENT_1>navcom_knob_push_button_on</WWISE_EVENT_1>
					<WWISE_EVENT_2>navcom_knob_push_button_off</WWISE_EVENT_2>	
					<LEFT_SINGLE_CODE>(L:GOPRO_ACTIVE) ! (&gt;L:GOPRO_ACTIVE)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<Component ID="GOPRO_VISIBILITY" Node="GO_PRO_PARENT">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:GOPRO_ACTIVE) !</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="FLARM_HIDER" Node="BUTTON_CB3">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<NODE_ID>BUTTON_CB3</NODE_ID>
					<PART_ID>BUTTON_CB3</PART_ID>
					<ANIM_NAME>CB_Pitot</ANIM_NAME>
					<ANIM_CODE>(L:FLARM_ACTIVE) 100 *</ANIM_CODE>
					<ANIMTIP_0>FLARM (DISPLAYED)</ANIMTIP_0>
					<ANIMTIP_1>FLARM (HIDDEN)</ANIMTIP_1>
					<WWISE_EVENT_1>navcom_knob_push_button_on</WWISE_EVENT_1>
					<WWISE_EVENT_2>navcom_knob_push_button_off</WWISE_EVENT_2>	
					<LEFT_SINGLE_CODE>
						(L:FLARM_ACTIVE) ! (&gt;L:FLARM_ACTIVE)
						(&gt;K:TOGGLE_TAXI_LIGHTS)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<Component ID="FLARM_VISIBILITY" Node="GAUGE_FLARM_BASE">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:FLARM_ACTIVE) !</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="PILOT_HIDER" Node="BUTTON_CB1">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<NODE_ID>BUTTON_CB1</NODE_ID>
					<PART_ID>BUTTON_CB1</PART_ID>
					<ANIM_NAME>CB_Comm</ANIM_NAME>
					<INVERT_ANIM>True</INVERT_ANIM>
					<ANIM_CODE>(L:PILOT_ACTIVE) 100 *</ANIM_CODE>
					<ANIMTIP_0>PILOT (DISPLAYED)</ANIMTIP_0>
					<ANIMTIP_1>PILOT (HIDDEN)</ANIMTIP_1>
					<LEFT_SINGLE_CODE>(L:PILOT_ACTIVE) ! (&gt;L:PILOT_ACTIVE)</LEFT_SINGLE_CODE>
					<WWISE_EVENT_1>navcom_knob_push_button_on</WWISE_EVENT_1>
					<WWISE_EVENT_2>navcom_knob_push_button_off</WWISE_EVENT_2>	
				</UseTemplate>
			</Component>
			<Component ID="COMPASS_HIDER" Node="BUTTON_CB2">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<NODE_ID>BUTTON_CB2</NODE_ID>
					<PART_ID>BUTTON_CB2</PART_ID>
					<ANIM_NAME>CB_Xpdr</ANIM_NAME>
					<ANIM_CODE>(L:COMPASS_ACTIVE) 100 *</ANIM_CODE>
					<ANIMTIP_0>FES/PREMIUM ONLY</ANIMTIP_0>
					<ANIMTIP_1>FES/PREMIUM ONLY</ANIMTIP_1>
					<WWISE_EVENT_1>navcom_knob_push_button_on</WWISE_EVENT_1>
					<WWISE_EVENT_2>navcom_knob_push_button_off</WWISE_EVENT_2>	
					<LEFT_SINGLE_CODE>(L:COMPASS_ACTIVE) ! (&gt;L:COMPASS_ACTIVE)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<Component ID="NAVIGATION_LIGHTS" Node="SWITCH_LIGHT_NAV_LIGHT">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<PART_ID>SWITCH_LIGHT_NAV_LIGHT</PART_ID>
					<ANIM_NAME>Nav_Light_Switch</ANIM_NAME>
					<ANIM_CODE>(A:LIGHT WING, bool) 100 *</ANIM_CODE>
					<ANIMTIP_0>Navigation Lights (off)</ANIMTIP_0>
					<ANIMTIP_1>Navigation Lights (on)</ANIMTIP_1>
					<WWISE_EVENT_1>landing_light_switch_on</WWISE_EVENT_1>
					<WWISE_EVENT_2>landing_light_switch_off</WWISE_EVENT_2>
					<LEFT_SINGLE_CODE>(A:LIGHT WING, bool) ! (&gt;A:LIGHT WING, bool)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<Component ID="NAVIGATION_LIGHTS_VISIBILITY" Node="INT_NAV_LIGHT_INLET">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:NAV_TOGGLE)</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
		</Component>
        <Component ID="AC_VENT_MOVEMENT">
			<UseTemplate Name="ASOBO_GT_Knob_Finite_Dummy">
				<KNOB_NAME>INT_AIR_VENT</KNOB_NAME>
				<ANIM_NAME>Air_Vent_Steps</ANIM_NAME>
				<COUNT>3</COUNT>
				<KNOB_SPEED>0.25</KNOB_SPEED>
				<KNOB_POSITION_VAR>VENT_MOVE</KNOB_POSITION_VAR>
				<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
				<KNOB_POSITION_VAR_UNIT>PERCENT</KNOB_POSITION_VAR_UNIT>
				<ANIM_LENGTH>100</ANIM_LENGTH>
				<ANIM_CODE>(L:VENT_MOVE,percent) 3 /</ANIM_CODE>
				<TOOLTIPID>Air Vent Adjustment</TOOLTIPID>
			</UseTemplate>
		</Component>		
<!-- ###################################### -->
<!-- ######### AVIONICS & BATTERY ######### -->
<!-- ###################################### -->	
		<Component ID="AVIONICS_TO_MASTER">
			<UseTemplate Name="ASOBO_GT_Update">
				<FREQUENCY>30</FREQUENCY>
				<UPDATE_CODE>(A:CIRCUIT ON:1, Bool) if{ (A:CIRCUIT ON:1, Bool) (&gt;K:AVIONICS_MASTER_SET) (A:CIRCUIT ON:1, Bool) (&gt;L:NAV_SCREEN) }</UPDATE_CODE>
			</UseTemplate>
		</Component>
		<Component ID="MASTER_BATTERY_GUARD" Node="SWITCH_MASTER_GUARD">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<PART_ID>SWITCH_MASTER_GUARD</PART_ID>
				<ANIM_NAME>Switch_Master_Guard</ANIM_NAME>
				<ANIM_CODE>(L:GUARD_OPEN_ALL) 100 *</ANIM_CODE>
				<ANIMTIP_0>SAFETY GUARD (CLOSED)</ANIMTIP_0>
				<ANIMTIP_1>SAFETY GUARD (OPEN)</ANIMTIP_1>
				<WWISE_EVENT_1>landing_light_switch_on</WWISE_EVENT_1>
				<WWISE_EVENT_2>landing_light_switch_off</WWISE_EVENT_2>
				<ANIM_LAG>600</ANIM_LAG>
				<ANIM_LENGTH>100</ANIM_LENGTH>				
				<LEFT_SINGLE_CODE>(L:GUARD_OPEN_ALL) ! (&gt;L:GUARD_OPEN_ALL)</LEFT_SINGLE_CODE>
			</UseTemplate>
		</Component>		
        <Component ID="MASTER_BATTERY_SWITCH" Node="SWITCH_MASTER">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<PART_ID>SWITCH_MASTER</PART_ID>
				<ANIM_NAME>Switch_Master</ANIM_NAME>
				<ANIM_CODE>(A:ELECTRICAL MASTER BATTERY, bool) 100 *</ANIM_CODE>
				<ANIMTIP_0>Master Battery (off)</ANIMTIP_0>
				<ANIMTIP_1>Master Battery (on)</ANIMTIP_1>
				<WWISE_EVENT_1>battery_switch_on</WWISE_EVENT_1>
				<WWISE_EVENT_2>battery_switch_off</WWISE_EVENT_2>
				<LEFT_SINGLE_CODE>(A:ELECTRICAL MASTER BATTERY, bool) ! (&gt;A:ELECTRICAL MASTER BATTERY, bool)</LEFT_SINGLE_CODE>
			</UseTemplate>
		</Component>
		<Component ID="MASTER_BATTERY_BREAKER" Node="BUTTON_CB5">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<PART_ID>BUTTON_CB5</PART_ID>
				<ANIM_NAME>CB_Batt</ANIM_NAME>
				<ANIM_CODE>(A:ELECTRICAL MASTER BATTERY, bool) 100 *</ANIM_CODE>
				<ANIMTIP_0>BATTERY BREAKER (DISCONNECTED)</ANIMTIP_0>
				<ANIMTIP_1>BATTERY BREAKER (CONNECTED)</ANIMTIP_1>
				<WWISE_EVENT_1>navcom_knob_push_button_on</WWISE_EVENT_1>
				<WWISE_EVENT_2>navcom_knob_push_button_off</WWISE_EVENT_2>	
				<LEFT_SINGLE_CODE>(A:ELECTRICAL MASTER BATTERY, bool) ! (&gt;A:ELECTRICAL MASTER BATTERY, bool)</LEFT_SINGLE_CODE>
			</UseTemplate>
		</Component>
		<Component ID="AS21_CIRCUIT_CONTROL">				
			<UseTemplate Name="ASOBO_AS21_Template">
				<CIRCUIT_ID>2</CIRCUIT_ID>			
			</UseTemplate>
		</Component>
		<Component ID="AS92_CIRCUIT_CONTROL">
			<UseTemplate Name="ASOBO_AS92_Template">
				<CIRCUIT_ID>8</CIRCUIT_ID>				
			</UseTemplate>
		</Component>
        <Component ID="NAV_HTML_BRIGHTNESS" Node="HTML_NAV">
			<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
				<EMISSIVE_CODE>(L:NAV_BRIGHTNESS) 1 / </EMISSIVE_CODE>
			</UseTemplate>
		</Component>
        <Component ID="LAUNCH_HTML_BRIGHTNESS" Node="HTML_LAUNCH">
			<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
				<EMISSIVE_CODE>(L:NAV_BRIGHTNESS) 1 / </EMISSIVE_CODE>
			</UseTemplate>
		</Component>
        <Component ID="XMTR_HTML_BRIGHTNESS" Node="HTML_XMTR">
			<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
				<EMISSIVE_CODE>(L:NAV_BRIGHTNESS) 1 / </EMISSIVE_CODE>
			</UseTemplate>
		</Component>
        <Component ID="COM_HTML_BRIGHTNESS" Node="HTML_COM">
			<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
				<EMISSIVE_CODE>(L:NAV_BRIGHTNESS) 1 / </EMISSIVE_CODE>
			</UseTemplate>
		</Component>
        <Component ID="S80_HTML_BRIGHTNESS" Node="HTML_S80">
			<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
				<EMISSIVE_CODE>(L:NAV_BRIGHTNESS) 1 / </EMISSIVE_CODE>
			</UseTemplate>
		</Component>
		<Component ID="S80_ADI_VISIBILITY" Node="HTML_S80_ADI">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>(L:S80_MODE) (L:VARIO_IS_RUNNING) and</VISIBILITY_CODE>
			</UseTemplate>
		</Component>
		<Component ID="ADI_DISPLAY" Node="HTML_S80_ADI">
			<UseTemplate name="ASOBO_GT_Material_Emissive_Code">
				<EMISSIVE_CODE>(L:NAV_BRIGHTNESS) 1 / </EMISSIVE_CODE>
			</UseTemplate>
		</Component>
		<Component ID="S80_VARIOMETER">
			<Component ID="S80_VARIO_VOL_KNOB">
				<UseTemplate Name="ASOBO_GT_Knob_Finite_Dummy">
					<KNOB_NAME>S80_VOLUME_KNOB</KNOB_NAME>
					<ANIM_NAME>S80_VOLUME_KNOB</ANIM_NAME>
					<PART_ID>S80_VOLUME_KNOB</PART_ID>
					<WWISE_EVENT>navcom_frequency_inner_knob</WWISE_EVENT>
					<COUNT>5</COUNT>
					<KNOB_SPEED>20</KNOB_SPEED>
					<KNOB_POSITION_VAR>VARIO_TONE_ACTIVE</KNOB_POSITION_VAR>
					<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
					<KNOB_POSITION_VAR_UNIT>PERCENT</KNOB_POSITION_VAR_UNIT>
					<ANIM_CODE>(L:VARIO_TONE_ACTIVE) 2 /</ANIM_CODE>
				</UseTemplate>
			</Component>
			<Component ID="S80_VARIO_MODE_KNOB">
				<UseTemplate Name="ASOBO_GT_Knob_Finite_Dummy">
					<KNOB_NAME>S80_MODE_KNOB</KNOB_NAME>
					<ANIM_NAME>S80_MODE_KNOB</ANIM_NAME>
					<PART_ID>S80_MODE_KNOB</PART_ID>
					<WWISE_EVENT>navcom_frequency_inner_knob</WWISE_EVENT>
					<COUNT>1</COUNT>
					<KNOB_SPEED>100</KNOB_SPEED>				
					<KNOB_POSITION_VAR>VARIO_MODE</KNOB_POSITION_VAR>
					<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
					<KNOB_POSITION_VAR_UNIT>PERCENT</KNOB_POSITION_VAR_UNIT>
					<ANIM_CODE>(L:VARIO_MODE) 2 /</ANIM_CODE>
					<ANIM_LAG>400</ANIM_LAG>
				</UseTemplate>
			</Component>
			<Component ID="S80_UP_BUTTON" Node="S80_UP_BUTTON">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<ANIM_NAME>S80_UP_BUTTON</ANIM_NAME>
					<ANIM_CODE>(L:S80_UP_BUTTON) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>1 (&gt;L:S80_UP_BUTTON)</LEFT_SINGLE_CODE>
					<ANIMTIP_0>Up</ANIMTIP_0>
					<ANIMTIP_1>Up</ANIMTIP_1>
					<ANIM_LENGTH>100</ANIM_LENGTH>
					<ANIM_LAG>500</ANIM_LAG>
				</UseTemplate>
			</Component>
			<Component ID="S80_ENTER_BUTTON" Node="S80_ENTER_BUTTON">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<ANIM_NAME>S80_ENTER_BUTTON</ANIM_NAME>
					<ANIM_CODE>(L:S80_ENTER_BUTTON) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>(L:S80_MODE) ! (&gt;L:S80_MODE)</LEFT_SINGLE_CODE>
					<ANIMTIP_0>Mode</ANIMTIP_0>
					<ANIMTIP_1>Mode</ANIMTIP_1>
					<ANIM_LENGTH>100</ANIM_LENGTH>
					<ANIM_LAG>500</ANIM_LAG>
				</UseTemplate>
			</Component>
			<Component ID="S80_DOWN_BUTTON" Node="S80_DOWN_BUTTON">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<ANIM_NAME>S80_BUTTON_DOWN</ANIM_NAME>
					<ANIM_CODE>(L:S80_DOWN_BUTTON) 100 *</ANIM_CODE>
					<LEFT_SINGLE_CODE>1 (&gt;L:S80_DOWN_BUTTON)</LEFT_SINGLE_CODE>
					<ANIMTIP_0>Down</ANIMTIP_0>
					<ANIMTIP_1>Down</ANIMTIP_1>
					<ANIM_LENGTH>100</ANIM_LENGTH>
					<ANIM_LAG>500</ANIM_LAG>
				</UseTemplate>
			</Component>
			<Component ID="S80_SDCARD_INSPECT" Node="S80_SD_CARD">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<PART_ID>S80_SD_CARD</PART_ID>
					<ANIM_NAME>S80_SD_Card</ANIM_NAME>
					<ANIM_CODE>(L:S80_SD_CARD) 100 *</ANIM_CODE>
					<ANIMTIP_0>MICRO-SD CARD (INSPECT)</ANIMTIP_0>
					<ANIMTIP_1>MICRO-SD CARD (INSPECT)</ANIMTIP_1>
					<ANIM_LAG>20</ANIM_LAG>
					<WWISE_EVENT_1>landing_light_switch_on</WWISE_EVENT_1>
					<WWISE_EVENT_2>landing_light_switch_off</WWISE_EVENT_2>
					<LEFT_SINGLE_CODE>(L:S80_SD_CARD) ! (&gt;L:S80_SD_CARD)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
		</Component>
<!-- ###################################### -->
<!-- ########## GAUGES & SWITCHES ######### -->
<!-- ###################################### -->
		<Component ID="BARO_BUG_KNOB" Node="GAUGE_ALT_KNOB">
			<UseTemplate Name="ASOBO_GT_Knob_Infinite">
				<PART_ID>GAUGE_ALT_KNOB</PART_ID>
				<ANIM_NAME>alt_cal</ANIM_NAME>
				<CLOCKWISE_CODE>(&gt;K:KOHLSMAN_INC)</CLOCKWISE_CODE>
				<ANTICLOCKWISE_CODE>(&gt;K:KOHLSMAN_DEC)</ANTICLOCKWISE_CODE>
				<WWISE_EVENT>as21_transponder_code_knob</WWISE_EVENT>
				<COUNT>18</COUNT>
			</UseTemplate>
		</Component>
		<Component ID="ANALOG_MACREADY">
			<UseTemplate Name="ASOBO_GT_Knob_Finite_Dummy">
				<KNOB_NAME>GAUGE_VSI_BEZEL</KNOB_NAME>
				<PART_ID>GAUGE_VSI_BEZEL</PART_ID>
				<ANIM_NAME>VSI_Bezel_Anim</ANIM_NAME>
				<WWISE_EVENT>as3x_inner_knob</WWISE_EVENT>
				<COUNT>100</COUNT>
				<KNOB_SPEED>1</KNOB_SPEED>
				<KNOB_POSITION_VAR>BEZEL_CAL_ANALOG</KNOB_POSITION_VAR>
				<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
				<KNOB_POSITION_VAR_UNIT>PERCENT</KNOB_POSITION_VAR_UNIT>
				<ANIM_LENGTH>100</ANIM_LENGTH>
				<ANIM_CODE>(L:BEZEL_CAL_ANALOG) 100 /</ANIM_CODE>
				<TOOLTIPID>Analog MacCready %((L:BEZEL_CAL_ANALOG) 1 *)%!2.0f!%&percnt;</TOOLTIPID>
			</UseTemplate>
		</Component>
		<Component ID="FLARM_SWITCH" Node="GAUGE_FLARM_FRONT">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<PART_ID>GAUGE_FLARM_FRONT</PART_ID>
				<ANIM_NAME>Flarm_Clickable</ANIM_NAME>
				<ANIM_CODE>(A:LIGHT TAXI ON, percent)</ANIM_CODE>
				<ANIMTIP_0>FLARM (DISABLED)</ANIMTIP_0>
				<ANIMTIP_1>FLARM (ENABLED)</ANIMTIP_1>
				<WWISE_EVENT_1>landing_light_switch_on</WWISE_EVENT_1>
				<WWISE_EVENT_2>landing_light_switch_off</WWISE_EVENT_2>
				<LEFT_SINGLE_CODE>(&gt;K:TOGGLE_TAXI_LIGHTS)</LEFT_SINGLE_CODE>
			</UseTemplate>
		</Component>
        <Component ID="GOPRO_SWITCH" Node="GOPRO">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<ANIM_NAME>Record_Toggle</ANIM_NAME>
				<ANIM_CODE>(A:CAMERA VIEW TYPE AND INDEX:1, Enum) 5 == if{ 100 } els{ 0 }</ANIM_CODE>
				<WWISE_EVENT_1>battery_switch_on</WWISE_EVENT_1>
				<WWISE_EVENT_2>battery_switch_off</WWISE_EVENT_2>
				<ANIMTIP_0>Enter GoPro Vision</ANIMTIP_0>
				<ANIMTIP_1></ANIMTIP_1>		
				<LEFT_SINGLE_CODE>2 (>A:CAMERA VIEW TYPE AND INDEX:0, Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:1, Enum)</LEFT_SINGLE_CODE>
			</UseTemplate>
		</Component>
        <Component ID="PITOT_HEAT_SWITCH" Node="SWITCH_PITOT_HEAT">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<PART_ID>SWITCH_PITOT_HEAT</PART_ID>
				<ANIM_NAME>Pitot_Switch</ANIM_NAME>
				<ANIM_CODE>(A:PITOT HEAT, bool) 100 *</ANIM_CODE>
				<ANIMTIP_0>Pitot Heat (off)</ANIMTIP_0>
				<ANIMTIP_1>Pitot Heat(on)</ANIMTIP_1>
				<WWISE_EVENT_1>landing_light_switch_on</WWISE_EVENT_1>
				<WWISE_EVENT_2>landing_light_switch_off</WWISE_EVENT_2>
				<LEFT_SINGLE_CODE>(&gt;K:PITOT_HEAT_TOGGLE)</LEFT_SINGLE_CODE>
			</UseTemplate>
		</Component>
        <Component ID="GLARESHIELD_LIGHT_SWITCH" Node="SWITCH_LIGHT_GLARESHIELD">
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<PART_ID>SWITCH_LIGHT_GLARESHIELD</PART_ID>
				<ANIM_NAME>GS_Light_Switch</ANIM_NAME>
				<ANIM_CODE>(A:LIGHT GLARESHIELD, bool) 100 *</ANIM_CODE>
				<ANIMTIP_0>Glareshield Lights (off)</ANIMTIP_0>
				<ANIMTIP_1>Glareshiled Lights (on)</ANIMTIP_1>
				<WWISE_EVENT_1>landing_light_switch_on</WWISE_EVENT_1>
				<WWISE_EVENT_2>landing_light_switch_off</WWISE_EVENT_2>
				<LEFT_SINGLE_CODE>(A:LIGHT GLARESHIELD, bool) ! (&gt;A:LIGHT GLARESHIELD, bool)</LEFT_SINGLE_CODE>
			</UseTemplate>
		</Component>
        <Component ID="GLARESHIELD_LIGHT_ON" Node="Glare_Light_On">
            <UseTemplate Name="ASOBO_GT_Material_Emissive_Code">
                <EMISSIVE_CODE>(A:LIGHT GLARESHIELD, bool)</EMISSIVE_CODE>
                <FAILURE>(A:CIRCUIT ON:1, Bool)</FAILURE>
            </UseTemplate>
        </Component>
<!-- ###################################### -->
<!-- ####### CUSTOM PHYSICS DRIVERS ####### -->
<!-- ###################################### -->
		<Component ID="MASTER_DRIVER">
			<UseTemplate Name="ASOBO_GT_Update">
				<FREQUENCY>30</FREQUENCY>
				<UPDATE_CODE>				
					(A:IS SLEW ACTIVE, bool) ! (A:ANIMATION DELTA TIME, seconds) 0 &gt; and (A:ANIMATION DELTA TIME, seconds) 1 &lt; and (&gt;L:SIM_ACTIVE)
					(L:SIM_ACTIVE) if{						
						0 s5
						0 s6
						(A:LIGHT STROBE, bool) 1 == if{
							(A:PAYLOAD STATION WEIGHT:2, pounds) s8
							(A:PAYLOAD STATION WEIGHT:3, pounds) s9							
							l8 0 &gt; if{
								0 l8 0.72 (A:ANIMATION DELTA TIME, seconds) * - max (&gt;A:PAYLOAD STATION WEIGHT:2, pounds)
								100 l8 5 * min s5
							}							
							l9 0 &gt; if{
								0 l9 0.72 (A:ANIMATION DELTA TIME, seconds) * - max (&gt;A:PAYLOAD STATION WEIGHT:3, pounds)
								100 l9 5 * min s6
							}
						}												
						l5 (&gt;L:BALLAST_DUMP_LEFT, percent)
						l5 l7 * (&gt;L:BALLAST_SPLASH_LEFT, percent)
						l6 (&gt;L:BALLAST_DUMP_RIGHT, percent)
						l6 l7 * (&gt;L:BALLAST_SPLASH_RIGHT, percent)						
						(A:FOLDING WING RIGHT PERCENT, meters per second) 0 == (A:FOLDING WING RIGHT PERCENT, meters per second) 20 &gt; or if{ 
							0.1 (&gt;A:FOLDING WING RIGHT PERCENT, meters per second)
						}
						(A:FOLDING WING RIGHT PERCENT, meters per second) 0.1 &gt; if{						
							(A:VELOCITY BODY Y, meters per second) 
							(A:ACCELERATION BODY Y, meters per second) (A:ANIMATION DELTA TIME, seconds) * + 
							(A:FOLDING WING RIGHT PERCENT, meters per second) (A:ANIMATION DELTA TIME, seconds) 0.033 min * +
							(&gt;A:VELOCITY BODY Y, meters per second)
							(A:VELOCITY BODY Z, meters per second) 
							(A:ACCELERATION BODY Z, meters per second) (A:ANIMATION DELTA TIME, seconds) * + 
							(A:FOLDING WING RIGHT PERCENT, meters per second) 2 / (A:ANIMATION DELTA TIME, seconds) 0.033 min * +
							(&gt;A:VELOCITY BODY Z, meters per second)							
							(A:ROTATION ACCELERATION BODY X, radians per second)
							(A:FOLDING WING RIGHT PERCENT, meters per second)
							0.17 (A:PLANE PITCH DEGREES, radians) (A:ROTATION VELOCITY BODY X, radians per second) + - 0 max 0.34 min * +
							(&gt;A:ROTATION ACCELERATION BODY X, radians per second)
							(E:ABSOLUTE TIME, seconds) 1 % (A:ANIMATION DELTA TIME, seconds) &lt;= if{
								(A:FOLDING WING RIGHT PERCENT, meters per second) 0.5 * 0.1 max (&gt;A:FOLDING WING RIGHT PERCENT, meters per second)
							}
						}
						(A:AIRSPEED TRUE, meters per second) (&gt;L:LAST AIRSPEED TRUE, meters per second)
						(A:PRESSURE ALTITUDE, meters) (&gt;L:LAST PRESSURE ALTITUDE, meters)					
						(L:VARIO_TONE_ACTIVE, percent) 20 - sp16
						
						(E:SIMULATION TIME, seconds) d (L:Cx_L_SIMTIME, seconds) - s19 (&gt;L:Cx_L_SIMTIMEdT, seconds) (&gt;L:Cx_L_SIMTIME, seconds)						
						l19 0 &gt; if{
							1 0.5 30 * / s17 sp18
							(A:AIRSPEED TRUE, meters per second) d *
							19.62 /
							(A:PLANE ALTITUDE, meters) +
							l17 * (Z:Cx_L_TE) 1 l17 - * +
							d (Z:Cx_L_TE) -
							l19 /
							r (&gt;Z:Cx_L_TE)
							l18 * (L:TOTAL ENERGY, meters per second) 1 l18 - * + 10 min 10 neg max
							(&gt;L:TOTAL ENERGY, meters per second)			
						}
					}
					(L:VARIO_POWER_STATUS) l16 0 &gt; and if{
						(L:VARIO_STF_MODE, number) 0 == if{
							(L:VARIO_NEEDLE, meters per second) 196.85 * (&gt;L:VARIO_TONE, feet per minute)
							(L:VARIO_NEEDLE, meters per second) 0.1 &gt; if{ l16 (A:AIRSPEED TRUE, meters per second) 5 / 1 min * } els{ 0 } (&gt;L:VARIO_TONE_LIFT, percent)
							(L:VARIO_NEEDLE, meters per second) -0.1 &lt; if{ l16 (A:AIRSPEED TRUE, meters per second) 5 / 1 min * } els{ 0 } (&gt;L:VARIO_TONE_SINK, percent)
						} els{ 	(L:VARIO_STF_MODE, number) 1 == if{
								(L:JBB_STF_TONE, number) (&gt;L:VARIO_TONE, feet per minute)
								(L:JBB_STF_TONE, number) 0.1 &gt; if{ l16 (A:AIRSPEED TRUE, meters per second) 5 / 1 min * } els{ 0 } (&gt;L:VARIO_TONE_LIFT, percent)
								(L:JBB_STF_TONE, number) -0.1 &lt; if{ l16 (A:AIRSPEED TRUE, meters per second) 5 / 1 min * } els{ 0 } (&gt;L:VARIO_TONE_SINK, percent)
							}
						}
					} els{
						0 (&gt;L:VARIO_TONE, feet per minute)
						0 (&gt;L:VARIO_TONE_LIFT, percent)
						0 (&gt;L:VARIO_TONE_SINK, percent)
					}				
					(A:TOTAL VELOCITY, meters per second) (&gt;L:LAST VELOCITY, meters per second)
					(A:ELECTRICAL MASTER BATTERY, bool) if{
						(L:AUTO_PILOT_BANK, radians) 0 != if{
							(A:PLANE PITCH DEGREES, radians) (A:ROTATION VELOCITY BODY X, radians per second) 10 / + 0.05 + (&gt;A:ELEVATOR TRIM POSITION, number)
							(A:PLANE BANK DEGREES, radians) (A:ROTATION VELOCITY BODY Z, radians per second) + (L:AUTO_PILOT_BANK, radians) - 250 * (&gt;A:AILERON TRIM PCT, percent)
						}						
						(L:AUTO_PILOT_COURSE, degrees) 0 != if{
							(L:AUTO_PILOT_COURSE, degrees) (A:PLANE HEADING DEGREES TRUE, degrees) - s1
							l1 180 &gt;= if{ l1 180 - s1 }
							l1 (&gt;L:AUTO_PILOT_COURSE_DIFF, degrees)						
							(A:PLANE PITCH DEGREES, radians) (A:ROTATON VELOCITY BODY X, radians per second) + 0.05 + (&gt;A:ELEVATOR TRIM POSITION, number)
							(A:PLANE BANK DEGREES, radians) (A:ROTATON VELOCITY BODY Y, radians per second) + 250 * l1 10 * 20 min -20 max + (&gt;A:AILERON TRIM PCT, percent)
						}
					}
					(A:TOW PLANE CONNECTION, Bool) ! (SIM ON GROUND, Bool) ! and (A:TOTAL WORLD VELOCITY, meters per second) 15 &gt; and
					if{ 1 (&gt;K:TOW_PLANE_RELEASE) 1 (&gt;L:TOW_HANDLE, bool) }
				</UPDATE_CODE>
			</UseTemplate>
		</Component>
        <Component ID="PHYSICS_DRIVER">
            <UseTemplate Name="ASOBO_GT_Update">
                <FREQUENCY>60</FREQUENCY>
                <UPDATE_CODE>
                    (A:DYNAMIC PRESSURE, Psf) s0
                    (A:AMBIENT PRECIP RATE, Millimeters of water) 8 min l0 * s1
                    (A:SPOILERS HANDLE POSITION, Percent over 100) l0 * (A:TOTAL WEIGHT, kg) / s2
                    (A:VELOCITY BODY Z, Knots) l1 0.0003 * - l2 1.900 * - (&gt;A:VELOCITY BODY Z, Knots)
                    (A:AILERON LEFT DEFLECTION PCT, percent) (L:AdverseYaw) -1 * * (&gt;K:RUDDER_TRIM_SET)
                </UPDATE_CODE>
            </UseTemplate>
        </Component>
        <Component ID="SPAWN_DRIVER">
            <UseTemplate Name="ASOBO_GT_Update">
                <UPDATE_ONCE>True</UPDATE_ONCE>
                <UPDATE_CODE>
                    1 (&gt;A:FUEL TANK CENTER LEVEL, Percent Over 100)
                    (A:EMPTY WEIGHT, pounds) 700 &gt; (&gt;L:IsFES)
                </UPDATE_CODE>
            </UseTemplate>
        </Component>
        <Component ID="YAWSTRING_DRIVER">
			<Component ID="YAWSTRING_ANIM_1">
				<UseTemplate Name="ASOBO_GT_Anim">
					<ANIM_NAME>yawstring_1</ANIM_NAME>
					<INVERT_ANIM>true</INVERT_ANIM>
					<ANIM_CODE>
						0.03 (&gt;O:JIGGLE_SIZE)
						3 (&gt;O:JIGGLE_FREQUENCY)

						(O:JIGGLE_FREQUENCY) 0 &gt; if{
							(O:JIGGLE_SIZE) 0 &gt; if{
								1 (O:JIGGLE_FREQUENCY) / (&gt;O:JIGGLE_PERIOD)
								(E:ABSOLUTE TIME, seconds) (O:JIGGLE_PERIOD) % (O:JIGGLE_PERIOD) / d 0.5 &gt; if{ 1 r - } 4 * 1 -
								(O:JIGGLE_SIZE) * 50 *
							} els{ 0 }
						} els{ 0 }
						(&gt;O:JIGGLE_ANIM)

						(A:SIM ON GROUND, boolean) (A:GPS GROUND SPEED, meters per second) 1 &lt; &amp;&amp; if{
								(A:PLANE HEADING DEGREES TRUE, degrees)
								(A:AMBIENT WIND DIRECTION, degrees) -
								720 +
								360 %
								d 180 &gt; if{
									360 -
								}
						} els{
							(A:RELATIVE WIND VELOCITY BODY X, meters per second)
							(A:RELATIVE WIND VELOCITY BODY Z, meters per second)
							/ atan neg 360 *
						}

						d (&gt;L:YAWSTRING_X_DEG)

						90 / 25 * 50 + (O:JIGGLE_ANIM) + 0 max 100 min
						d (&gt;L:YAWSTRING_X_ANIM)
					</ANIM_CODE>
				</UseTemplate>
			</Component>
			<Component ID="YAWSTRING_ANIM_2">
				<UseTemplate Name="ASOBO_GT_Anim">
					<INVERT_ANIM>true</INVERT_ANIM>
					<ANIM_NAME>yawstring_2</ANIM_NAME>
					<ANIM_CODE>
						0.04 (&gt;O:JIGGLE_SIZE)
						4 (&gt;O:JIGGLE_FREQUENCY)

						(O:JIGGLE_FREQUENCY) 0 &gt; if{
							(O:JIGGLE_SIZE) 0 &gt; if{
								1 (O:JIGGLE_FREQUENCY) / (&gt;O:JIGGLE_PERIOD)
								(E:ABSOLUTE TIME, seconds) (O:JIGGLE_PERIOD) % (O:JIGGLE_PERIOD) / d 0.5 &gt; if{ 1 r - } 4 * 1 -
								(O:JIGGLE_SIZE) * 50 *
							} els{ 0 }
						} els{ 0 }
						(&gt;O:JIGGLE_ANIM)

						(A:SIM ON GROUND, boolean) (A:GPS GROUND SPEED, meters per second) 1 &lt; &amp;&amp; if{
								(A:PLANE HEADING DEGREES TRUE, degrees)
								(A:AMBIENT WIND DIRECTION, degrees) -
								720 +
								360 %
								d 180 &gt; if{
									360 -
								}
						} els{
							(A:RELATIVE WIND VELOCITY BODY X, meters per second)
							(A:RELATIVE WIND VELOCITY BODY Z, meters per second)
							/ atan neg 360 *
						}

						d (&gt;L:YAWSTRING_X_DEG)

						90 / 25 * 50 + (O:JIGGLE_ANIM) + 0 max 100 min
						d (&gt;L:YAWSTRING_X_ANIM)
					</ANIM_CODE>
				</UseTemplate>
			</Component>			
			<Component ID="YAWSTRING_ANIM_3">
				<UseTemplate Name="ASOBO_GT_Anim">
					<ANIM_NAME>yawstring_3</ANIM_NAME>
					<INVERT_ANIM>true</INVERT_ANIM>
					<ANIM_LAG>0</ANIM_LAG>
					<ANIM_CODE>
						0.3 (&gt;O:JIGGLE_SIZE)
						3 (&gt;O:JIGGLE_FREQUENCY)

						(O:JIGGLE_FREQUENCY) 0 &gt; if{			
							(O:JIGGLE_SIZE) 0 &gt; if{
								1 (O:JIGGLE_FREQUENCY) / (&gt;O:JIGGLE_PERIOD)
								(E:ABSOLUTE TIME, seconds) (O:JIGGLE_PERIOD) % (O:JIGGLE_PERIOD) / d 0.5 &gt; if{ 1 r - } 4 * 1 -
								(O:JIGGLE_SIZE) * 50 *
							} els{ 0 }
						} els{ 0 }
						(&gt;O:JIGGLE_ANIM)

						(A:SIM ON GROUND, boolean) (A:GPS GROUND SPEED, meters per second) 1 &lt; &amp;&amp; if{
								(O:JIGGLE_ANIM) (A:AMBIENT WIND VELOCITY, meters per second) 5 / 1 min * (&gt;O:JIGGLE_ANIM)
						}

						(O:JIGGLE_ANIM) 50 +
						d (&gt;L:YAWSTRING_TIP_ANIM)
					</ANIM_CODE>
				</UseTemplate>
			</Component>
		</Component>
		<Component ID="BRAKES_DRIVER">
			<UseTemplate Name="ASOBO_GT_Update">
				<FREQUENCY>30</FREQUENCY>
				<UPDATE_CODE>(A:BRAKE RIGHT POSITION, percent) (A:BRAKE LEFT POSITION, percent) &gt; if{ (A:BRAKE RIGHT POSITION, percent) (&gt;A:BRAKE LEFT POSITION, percent) }</UPDATE_CODE>
			</UseTemplate>
		</Component>
<!-- ###################################### -->
<!-- ############# EMISSIVES ############## -->
<!-- ###################################### -->
		<Component ID="GOPRO_LIGHT" Node="GOPRO_Emissive">
			<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
				<EMISSIVE_CODE>(A:ELECTRICAL MASTER BATTERY, bool) if{ (E:ABSOLUTE TIME, Seconds) 1 % 0.5 &lt; }</EMISSIVE_CODE>
			</UseTemplate>
		</Component>
<!-- ###################################### -->
<!-- ###### CHECKLIST UNLISTED PARTS ###### -->
<!-- ###################################### -->
        <Component ID="GAUGE_NAV_BASE" Node="INT_LXNAV_BEZEL">
			<UseTemplate Name="ASOBO_GT_Part_ID_Subtemplate">
				<PART_ID>INT_LXNAV_BEZEL</PART_ID>
			</UseTemplate>
		</Component>
        <Component ID="TRANSPONDER_BASE" Node="TRANSPONDER_BASE">
			<UseTemplate Name="ASOBO_GT_Part_ID_Subtemplate">
				<PART_ID>TRANSPONDER_BASE</PART_ID>
			</UseTemplate>
		</Component>
        <Component ID="GAUGE_COM_BASE" Node="GAUGE_COM_BASE">
			<UseTemplate Name="ASOBO_GT_Part_ID_Subtemplate">
				<PART_ID>GAUGE_COM_BASE</PART_ID>
			</UseTemplate>
		</Component>
        <Component ID="VARIO_COLLISION" Node="S80_BASE">
			<UseTemplate Name="ASOBO_GT_Part_ID_Subtemplate">
				<PART_ID>S80_BASE</PART_ID>
			</UseTemplate>
		</Component>
        <Component ID="INT_DASHBOARD_MISC_3" Node="INT_DASHBOARD_MISC_3">
			<UseTemplate Name="ASOBO_GT_Part_ID_Subtemplate">
				<PART_ID>INT_DASHBOARD_MISC_3</PART_ID>
			</UseTemplate>
		</Component>
<!-- ###################################### -->
<!-- ##### LX NAV AND CABLE RELEASE ####### -->
<!-- ###################################### 
        <Component ID="LX_KNOB_1" Node="INT_LX_KNOB_SMALL1">
			<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
				<WRAP>False</WRAP>
				<PART_ID>INT_LX_KNOB_SMALL1</PART_ID>
				<ANIM_CODE>(L:NAV_BRIGHTNESS) 100 *</ANIM_CODE>
				<ANIM_LENGTH>100</ANIM_LENGTH>
				<ANIM_NAME>Brightness_Knob</ANIM_NAME>
				<WWISE_EVENT>as21_transponder_code_knob</WWISE_EVENT>
				<ANTICLOCKWISE_CODE>
					(L:NAV_BRIGHTNESS) 0.1 - 0.1 max (&gt;L:NAV_BRIGHTNESS)
				</ANTICLOCKWISE_CODE>
				<CLOCKWISE_CODE>
					(L:NAV_BRIGHTNESS) 0.1 + 1 min (&gt;L:NAV_BRIGHTNESS)
				</CLOCKWISE_CODE>
				<ANIMCURSOR_DIR>1.0</ANIMCURSOR_DIR>
				<ANIMCURSOR_MIN>0.1</ANIMCURSOR_MIN>
				<TOOLTIPID>Display Brightness %((L:NAV_BRIGHTNESS) 100 *)%!2.0f!%&percnt;</TOOLTIPID>
				<COUNT>10</COUNT>
			</UseTemplate>
		</Component>
		<Component ID="LX_KNOB_2" Node="INT_LX_KNOB_SMALL2">
			<UseTemplate Name="ASOBO_GT_Knob_Finite_Dummy">
				<KNOB_NAME>INT_LX_KNOB_SMALL2</KNOB_NAME>
				<PART_ID>INT_LX_KNOB_SMALL2</PART_ID>
				<ANIM_NAME>Ballast_Knob</ANIM_NAME>
				<WWISE_EVENT>as21_transponder_code_knob</WWISE_EVENT>
				<COUNT>100</COUNT>
				<KNOB_SPEED>1</KNOB_SPEED>
				<KNOB_POSITION_VAR>BEZEL_CAL</KNOB_POSITION_VAR>
				<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
				<KNOB_POSITION_VAR_UNIT>PERCENT</KNOB_POSITION_VAR_UNIT>
				<ANIM_LENGTH>100</ANIM_LENGTH>
				<ANIM_CODE>(L:BEZEL_CAL) 100 /</ANIM_CODE>
				<TOOLTIPID>Digital MacCready %((L:BEZEL_CAL) 1 *)%!2.0f!%&percnt;</TOOLTIPID>
			</UseTemplate>
		</Component>
        <Component ID="LX_KNOB_3" Node="INT_LX_KNOB_SMALL3">
            <UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
                <WRAP>False</WRAP>
                <PART_ID>INT_LX_KNOB_SMALL3</PART_ID>
                <ANIM_CODE>(L:AdverseYaw) 100 *</ANIM_CODE>
                <ANIM_LENGTH>100</ANIM_LENGTH>
                <ANIM_NAME>Macready_Knob</ANIM_NAME>
                <WWISE_EVENT>as21_transponder_code_knob</WWISE_EVENT>
                <ANTICLOCKWISE_CODE>
                    (L:AdverseYaw) 0.1 - 0.0 max (&gt;L:AdverseYaw)
                </ANTICLOCKWISE_CODE>
                <CLOCKWISE_CODE>
                    (L:AdverseYaw) 0.1 + 1.0 min (&gt;L:AdverseYaw)
                </CLOCKWISE_CODE>
                <ANIMCURSOR_DIR>1.0</ANIMCURSOR_DIR>
                <ANIMCURSOR_MIN>0.1</ANIMCURSOR_MIN>
                <TOOLTIPID>Adverse Yaw %((L:AdverseYaw) 100 *)%!d!%&percnt;</TOOLTIPID>
                <COUNT>10</COUNT>
            </UseTemplate>
        </Component> 		
        <Component ID="LX_KNOB_4" Node="INT_LX_KNOB_SMALL4">
			<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
				<WRAP>False</WRAP>
				<PART_ID>INT_LX_KNOB_SMALL4</PART_ID>
				<ANIM_CODE>(L:WaterBallastRatio) 100 *</ANIM_CODE>
				<ANIM_LENGTH>100</ANIM_LENGTH>
				<ANIM_NAME>Zoom_Knob</ANIM_NAME>
				<WWISE_EVENT>as21_transponder_code_knob</WWISE_EVENT>
				<ANTICLOCKWISE_CODE>
					(L:WaterBallastRatio) 0.1 - 0 max (&gt;L:WaterBallastRatio)
					(L:IsFES)
					if{
						(L:WaterBallastRatio) 110 * (&gt;A:PAYLOAD STATION WEIGHT:2, pounds)
						(L:WaterBallastRatio) 110 * (&gt;A:PAYLOAD STATION WEIGHT:3, pounds)
						(L:WaterBallastRatio) 9 * (&gt;A:PAYLOAD STATION WEIGHT:4, pounds)
					} els{
						(L:WaterBallastRatio) 220 * (&gt;A:PAYLOAD STATION WEIGHT:2, pounds)
						(L:WaterBallastRatio) 220 * (&gt;A:PAYLOAD STATION WEIGHT:3, pounds)
						(L:WaterBallastRatio) 18 * (&gt;A:PAYLOAD STATION WEIGHT:4, pounds)
					}
				</ANTICLOCKWISE_CODE>
				<CLOCKWISE_CODE>
					(L:WaterBallastRatio) 0.1 + 1 min (&gt;L:WaterBallastRatio)
					(L:IsFES)
					if{
						(L:WaterBallastRatio) 110 * (&gt;A:PAYLOAD STATION WEIGHT:2, pounds)
						(L:WaterBallastRatio) 110 * (&gt;A:PAYLOAD STATION WEIGHT:3, pounds)
						(L:WaterBallastRatio) 9 * (&gt;A:PAYLOAD STATION WEIGHT:4, pounds)
					} els{
						(L:WaterBallastRatio) 220 * (&gt;A:PAYLOAD STATION WEIGHT:2, pounds)
						(L:WaterBallastRatio) 220 * (&gt;A:PAYLOAD STATION WEIGHT:3, pounds)
						(L:WaterBallastRatio) 18 * (&gt;A:PAYLOAD STATION WEIGHT:4, pounds)
					}
				</CLOCKWISE_CODE>
				<ANIMCURSOR_DIR>1.0</ANIMCURSOR_DIR>
				<ANIMCURSOR_MIN>0.100</ANIMCURSOR_MIN>
				<TOOLTIPID>Water Ballast %((L:WaterBallastRatio) 100 *)%!2.0f!%&percnt;</TOOLTIPID>
				<COUNT>10</COUNT>
			</UseTemplate>
		</Component>
		-->


<!-- ###################################### -->
<!-- # JACKBILBO REPLACEMENT LX NAV KNOBS # -->
<!-- ###################################### -->
        <Component ID="GOT_FRIENDS_BUTTON_FIX">
            <UseTemplate Name="ASOBO_GT_Update">
                <UPDATE_CODE>
                    1 (&gt;L:BUTTON_FIX)
                </UPDATE_CODE>
            </UseTemplate>
        </Component>
		<Component ID="GOT_FRIENDS_BUTTON_VISIBILITY" 				Node="GAUGE_NAV_BUTTON">
			<UseTemplate Name="ASOBO_GT_Visibility_Code">
				<VISIBILITY_CODE>
					(L:BUTTON_FIX, bool) 0 ==
				</VISIBILITY_CODE>
			</UseTemplate>
		</Component>
        <Component ID="LX_KNOB_1" 	Node="INT_LX_KNOB_SMALL1">
			<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
				<WRAP>False</WRAP>
				<PART_ID>INT_LX_KNOB_SMALL1</PART_ID>
				<ANIM_CODE>(L:LX_KNOB_1, number) 100 *</ANIM_CODE>
				<ANIM_LENGTH>100</ANIM_LENGTH>
				<ANIM_NAME>Brightness_Knob</ANIM_NAME>
				<WWISE_EVENT>as21_transponder_code_knob</WWISE_EVENT>
				<ANTICLOCKWISE_CODE>
					(L:LX_KNOB_1) 0.1 - 0.1 max (&gt;L:LX_KNOB_1)
				</ANTICLOCKWISE_CODE>
				<CLOCKWISE_CODE>
					(L:LX_KNOB_1) 0.1 + 1 min (&gt;L:LX_KNOB_1)
				</CLOCKWISE_CODE>
				<ANIMCURSOR_DIR>1.0</ANIMCURSOR_DIR>
				<ANIMCURSOR_MIN>0.1</ANIMCURSOR_MIN>
				<TOOLTIPID>MAP ZOOM</TOOLTIPID>
				<COUNT>10</COUNT>
			</UseTemplate>
		</Component>
		<Component ID="LX_KNOB_2">
			<UseTemplate Name="ASOBO_GT_Knob_Finite_Dummy">
				<KNOB_NAME>INT_LX_KNOB_SMALL2</KNOB_NAME>
				<PART_ID>INT_LX_KNOB_SMALL2</PART_ID>
				<ANIM_NAME>Ballast_Knob</ANIM_NAME>
				<WWISE_EVENT>as21_transponder_code_knob</WWISE_EVENT>
				<COUNT>9</COUNT>
				<KNOB_SPEED>1</KNOB_SPEED>
				<KNOB_POSITION_VAR>BEZEL_CAL</KNOB_POSITION_VAR>
				<KNOB_POSITION_VAR_TYPE>L</KNOB_POSITION_VAR_TYPE>
				<KNOB_POSITION_VAR_UNIT>PERCENT</KNOB_POSITION_VAR_UNIT>
				<ANIM_LENGTH>100</ANIM_LENGTH>
				<ANIM_CODE>(L:BEZEL_CAL,percent) 9 /</ANIM_CODE>
				<TOOLTIPID>Digital MacCready %((L:BEZEL_CAL) 1 *)%!2.0f!%&percnt;</TOOLTIPID>
			</UseTemplate>
		</Component>
        <Component ID="LX_KNOB_3"             Node="INT_LX_KNOB_SMALL3">
            <UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
                <WRAP>False</WRAP>
                <PART_ID>INT_LX_KNOB_SMALL3</PART_ID>
                <ANIM_CODE>(L:LX_KNOB_3, number) 100 *</ANIM_CODE>
                <ANIM_LENGTH>100</ANIM_LENGTH>
                <ANIM_NAME>Macready_Knob</ANIM_NAME>
                <WWISE_EVENT>as21_transponder_code_knob</WWISE_EVENT>
                <ANTICLOCKWISE_CODE>
					(L:LX_KNOB_3) 0.1 - 0.1 max (&gt;L:LX_KNOB_3)
				</ANTICLOCKWISE_CODE>
				<CLOCKWISE_CODE>
					(L:LX_KNOB_3) 0.1 + 1 min (&gt;L:LX_KNOB_3)
				</CLOCKWISE_CODE>
				<ANIMCURSOR_DIR>1.0</ANIMCURSOR_DIR>
				<ANIMCURSOR_MIN>0.1</ANIMCURSOR_MIN>
				<TOOLTIPID>PAGE LEFT/RIGHT</TOOLTIPID>
				<COUNT>10</COUNT>
			</UseTemplate>
		</Component>
        <Component ID="LX_KNOB_4" 		Node="INT_LX_KNOB_SMALL4">
			<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
				<WRAP>False</WRAP>
				<PART_ID>INT_LX_KNOB_SMALL4</PART_ID>
				<ANIM_CODE>(L:LX_KNOB_4, number) 100 *</ANIM_CODE>
				<ANIM_LENGTH>100</ANIM_LENGTH>
				<ANIM_NAME>Zoom_Knob</ANIM_NAME>
				<WWISE_EVENT>as21_transponder_code_knob</WWISE_EVENT>
				<ANTICLOCKWISE_CODE>
					(L:LX_KNOB_4) 0.1 - 0.1 max (&gt;L:LX_KNOB_4)
				</ANTICLOCKWISE_CODE>
				<CLOCKWISE_CODE>
					(L:LX_KNOB_4) 0.1 + 1 min (&gt;L:LX_KNOB_4)
				</CLOCKWISE_CODE>
				<ANIMCURSOR_DIR>1.0</ANIMCURSOR_DIR>
				<ANIMCURSOR_MIN>0.1</ANIMCURSOR_MIN>
				<TOOLTIPID>PAGE UP/DOWN</TOOLTIPID>
				<COUNT>10</COUNT>
			</UseTemplate>
		</Component>

		<Component ID="LAUNCH_MENU">
			<Component ID="OLD_MENU" Node="INT_LXNAV_SDCARD">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<PART_ID>INT_LXNAV_SDCARD</PART_ID>
					<ANIM_NAME>OLD_MENU</ANIM_NAME>
					<ANIM_CODE>(L:NAV_SWAP) 100 *</ANIM_CODE>
					<ANIMTIP_0>OLD LAUNCH MENU (LOAD)</ANIMTIP_0>
					<ANIMTIP_1>OLD LAUNCH MENU (UNLOAD)</ANIMTIP_1>
					<ANIM_LAG>300</ANIM_LAG>
					<WWISE_EVENT_1>landing_light_switch_on</WWISE_EVENT_1>
					<WWISE_EVENT_2>landing_light_switch_off</WWISE_EVENT_2>
					<LEFT_SINGLE_CODE>(L:NAV_SWAP) ! (&gt;L:NAV_SWAP)</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<Component ID="NEW_MENU" Node="GAUGE_NAV_BUTTON">
				<UseTemplate Name="ASOBO_GT_Switch_Code">
					<PART_ID>GAUGE_NAV_BUTTON</PART_ID>
					<ANIM_NAME>Swap_Nav_HTML</ANIM_NAME>
					<ANIM_CODE>(L:KA_SOUND_ON) 100 *</ANIM_CODE>
					<ANIM_LAG>250</ANIM_LAG>
					<ANIMTIP_0>Open Launch Menu</ANIMTIP_0>
					<ANIMTIP_1>Close Launch Menu</ANIMTIP_1>
					<WWISE_EVENT_1>landing_light_switch_on</WWISE_EVENT_1>
					<WWISE_EVENT_2>landing_light_switch_off</WWISE_EVENT_2>
					<LEFT_SINGLE_CODE>
					(L:KA_SOUND_ON) ! (&gt;L:KA_SOUND_ON)				
					(Z:MIC_POSITION) 100 != 100 * (&gt;Z:MIC_POSITION)
					</LEFT_SINGLE_CODE>
				</UseTemplate>
			</Component>
			<Component ID="MENU_VISIBILITY_1" Node="HTML_NAV">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:NAV_SWAP) !</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
			<Component ID="MENU_VISIBILITY_2" Node="HTML_LAUNCH">
				<UseTemplate Name="ASOBO_GT_Visibility_Code">
					<VISIBILITY_CODE>(L:NAV_SWAP)</VISIBILITY_CODE>
				</UseTemplate>
			</Component>
		</Component>		
        <Component ID="ROPE_RELEASE" Node="ROPE_RELEASE_HANDLE">
            <UseTemplate Name="ASOBO_GT_Switch_Code">
                <PART_ID>ROPE_RELEASE_HANDLE</PART_ID>
                <ANIM_NAME>Rope_Release_Anim</ANIM_NAME>
                <ANIM_CODE>(L:TOW_HANDLE) 100 *</ANIM_CODE>
                <ANIM_LAG>100</ANIM_LAG>
                <ANIMTIP_0>RELEASE CABLE</ANIMTIP_0>
                <ANIMTIP_1>RELEASE CABLE</ANIMTIP_1>
                <WWISE_EVENT_1>parking_brake_switch_on</WWISE_EVENT_1>
                <WWISE_EVENT_2>parking_brake_switch_off</WWISE_EVENT_2>
                <LEFT_SINGLE_CODE>
                    0 (&gt;A:WATER RUDDER HANDLE POSITION, percent)
                    0 (&gt;K:RECOGNITION_LIGHTS_SET)
                    0 (&gt;K:LOGO_LIGHTS_SET)
					1 (&gt;K:TOW_PLANE_RELEASE)
					(L:TOW_HANDLE, bool) ! (&gt;L:TOW_HANDLE, bool)
                </LEFT_SINGLE_CODE>
            </UseTemplate>
        </Component>
	</Behaviors>
<!-- ###################################### -->
<!-- ## LEGACY CODING - LEAVE UNTIL 2024 ## -->
<!-- ###################################### -->
	<Animation name="needle_vsi" guid="a69cdba9-e214-4be9-9b12-e7303d12d3ee" type="Sim" typeParam="AutoPlay" typeParam2="needle_vsi" length="100"/>
	<PartInfo>
		<Name>needle_vsi</Name>
		<AnimLength>100</AnimLength>
		<Animation>
			<Parameter>
				<Code>
					(L:NETTO, meters per second) 10 * 50 +
				</Code>
				<Lag>20</Lag>
			</Parameter>
		</Animation>
	</PartInfo>
	<Animation name="needle_asi" guid="7e521e17-c454-487f-9841-c981facc40a6" type="Sim" typeParam="AutoPlay" typeParam2="needle_asi" length="300"/>
	<PartInfo>
		<Name>needle_asi</Name>
		<AnimLength>300</AnimLength>
		<Animation>
			<Parameter>
				<Code>(A:AIRSPEED INDICATED, kilometer per hour)</Code>
			</Parameter>
		</Animation>
	</PartInfo>
	<Animation name="alt_100_imperial" guid="da7bec45-e505-4568-b44d-229a17c28bac" type="Sim" typeParam="AutoPlay" typeParam2="alt_100_imperial" length="100"/>
	<PartInfo>
		<Name>alt_100_imperial</Name>
		<AnimLength>100</AnimLength>
		<Animation>
			<Parameter>
				<Code>(A:INDICATED ALTITUDE, feet) 10 / 100 %</Code>
			</Parameter>
		</Animation>
	</PartInfo>
	<Animation name="alt_1000_imperial" guid="85bd5749-dfb3-4598-afc6-79dc97975a9b" type="Sim" typeParam="AutoPlay" typeParam2="alt_1000_imperial" length="100"/>
	<PartInfo>
		<Name>alt_1000_imperial</Name>
		<AnimLength>100</AnimLength>
		<Animation>
			<Parameter>
				<Code>(A:INDICATED ALTITUDE, feet) 100 / 100 %</Code>
			</Parameter>
		</Animation>
	</PartInfo>
	<Animation name="alt_100_metric" guid="eac2174f-6bef-439f-9264-aefccdc237c1" type="Sim" typeParam="AutoPlay" typeParam2="alt_100_metric" length="100"/>
	<PartInfo>
		<Name>alt_100_metric</Name>
		<AnimLength>100</AnimLength>
		<Animation>
			<Parameter>
				<Code>(A:INDICATED ALTITUDE, meters) 10 / 100 %</Code>
			</Parameter>
		</Animation>
	</PartInfo>
	<Animation name="alt_1000_metric" guid="f0827d06-6369-4f4b-8829-97dcce6d1347" type="Sim" typeParam="AutoPlay" typeParam2="alt_1000_metric" length="100"/>
	<PartInfo>
		<Name>alt_1000_metric</Name>
		<AnimLength>100</AnimLength>
		<Animation>
			<Parameter>
				<Code>(A:INDICATED ALTITUDE, meters) 100 / 100 %</Code>
			</Parameter>
		</Animation>
	</PartInfo>
	<Animation name="gauge_alt_kohls" guid="ec0a5fd8-2faf-4daf-8ad9-95e999857b8c" length="360" type="Sim" typeParam2="gauge_alt_kohls" typeParam="AutoPlay" />
	<PartInfo>
		<Name>gauge_alt_kohls</Name>
		<AnimLength>360</AnimLength>
		<Animation>
			<Parameter>
				<Sim>
				<Variable>KOHLSMAN SETTING HG</Variable>
				<Units>inHg</Units>
				<Scale>100</Scale>
				<Bias>-2800</Bias>
				</Sim>
			</Parameter>
		</Animation>
	</PartInfo>
	<Animation name="gauge_alt_kohls_metric" guid="d1c9a2b1-3730-4f7f-a02c-9434a575c701" length="360" type="Sim" typeParam2="gauge_alt_kohls_metric" typeParam="AutoPlay" />
	<PartInfo>
		<Name>gauge_alt_kohls_metric</Name>
		<AnimLength>360</AnimLength>
		<Animation>
			<Parameter>
				<Sim>
				<Variable>KOHLSMAN SETTING HG</Variable>
				<Units>inHg</Units>
				<Scale>100</Scale>
				<Bias>-2800</Bias>
				</Sim>
			</Parameter>
		</Animation>
	</PartInfo>
	<Animation name="Thermal_Gauge_Metric" guid="a386ebe1-a03e-4c9f-962c-991c2e3ea53e" typeParam2="Thermal_Gauge_Metric" length="160" type="Sim" typeParam="AutoPlay" />
	<PartInfo>
		<Name>Thermal_Gauge_Metric</Name>
		<AnimLength>160</AnimLength>
		<Animation>
			<Parameter>
				<Code>(A:AMBIENT TEMPERATURE, farenheit) 41 +</Code>
				<Lag>5</Lag>
			</Parameter>
		</Animation>
	</PartInfo>
	<Animation name="Thermal_Gauge" guid="2ebd399c-5c4a-47e5-ae42-f957fd89e257" typeParam2="Thermal_Gauge" length="160" type="Sim" typeParam="AutoPlay" />  
	<PartInfo>
		<Name>Thermal_Gauge</Name>
		<AnimLength>160</AnimLength>
		<Animation>
			<Parameter>
				<Code>(A:AMBIENT TEMPERATURE, farenheit) 41 +</Code>
				<Lag>5</Lag>
			</Parameter>
		</Animation>
	</PartInfo>
	<Animation name="cylinder_wiskey_compass" guid="ad4002f1-c3fe-42db-a2ad-e3429f3ca520" length="360" type="Sim" typeParam2="cylinder_wiskey_compass" typeParam="AutoPlay" />
	<PartInfo>
		<Name>cylinder_wiskey_compass</Name>
		<AnimLength>360</AnimLength>
		<Animation>
			<Parameter>
				<Code>360 (A:Wiskey compass indication degrees,degrees) - dnor</Code>
			</Parameter>
		</Animation>
	</PartInfo>
	<Animation name="gauge_ball_pitch" guid="dd23e3be-642e-48b8-b4da-f6385e866c16" length="360" type="Sim" typeParam2="gauge_ball_pitch" typeParam="AutoPlay" />
	<PartInfo>
		<Name>gauge_ball_pitch</Name>
		<AnimLength>360</AnimLength>
		<INVERT_ANIM>True</INVERT_ANIM>
		<Animation>
			<Parameter>
				<Code>(A:ATTITUDE INDICATOR PITCH DEGREES, degree) 180 +</Code>
			</Parameter>
		</Animation>
	</PartInfo>
	<Animation name="gauge_bank_marker" guid="96b1a419-bdcc-4692-bd3c-7f823db0694e" length="360" type="Sim" typeParam2="gauge_bank_marker" typeParam="AutoPlay" />
	<PartInfo>
		<Name>gauge_bank_marker</Name>
		<AnimLength>360</AnimLength>
		<Animation>
			<Parameter>
				<Code>(A:ATTITUDE INDICATOR BANK DEGREES, degree) 180 +</Code>
			</Parameter>
		</Animation>
	</PartInfo>
	<Animation name="left_wingflex" guid="75573852-5364-48d3-84ca-ac399410a8bc" type="Sim" typeParam="AutoPlay" typeParam2="left_wingflex" length="100"/>
	<PartInfo>
		<Name>left_wingflex</Name>
		<AnimLength>100</AnimLength>
		<Animation>
			<Parameter>
				<Sim>
				<Variable>WING FLEX PCT:1</Variable>
				<Units>percent</Units>
				<Scale>-0.5</Scale>
				<Bias>50</Bias>
				</Sim>
			</Parameter>
		</Animation>
	</PartInfo>
	<Animation name="right_wingflex" guid="df96238b-b0c2-4c81-9d1e-5788f90ef049" type="Sim" typeParam="AutoPlay" typeParam2="right_wingflex" length="100"/>
	<PartInfo>
		<Name>right_wingflex</Name>
		<AnimLength>100</AnimLength>
		<Animation>
			<Parameter>
				<Sim>
				<Variable>WING FLEX PCT:2</Variable>
				<Units>percent</Units>
				<Scale>-0.5</Scale>
				<Bias>50</Bias>
				</Sim>
			</Parameter>
		</Animation>
	</PartInfo>	
</ModelInfo>